library ieee;
use ieee.std_logic_1164.all;

entity practica3 is
port(
	sel: in std_logic;
	ix1: in std_logic_vector(3 downto 0);
	ix2: in std_logic_vector(3 downto 0);
	ox: out std_logic_vector(2 downto 0);
	seg: out std_logic_vector(7 downto 0);
	dig: out std_logic_vector(3 downto 0)
);
end practica3;

architecture desarrollo of practica3 is
begin
	process(ix1, ix2, sel)
	begin
		case(sel) is
			when '0' =>
				case(ix1) is
					when x"0" => seg <=x"c0";--0
					when x"1" => seg <=x"f9";--1
					when x"2" => seg <=x"a4";--2
					when x"3" => seg <=x"b0";--3
					when x"4" => seg <=x"99";--4
					when x"5" => seg <=x"92";--5
					when x"6" => seg <=x"82";--6
					when x"7" => seg <=x"f8";--7
					when x"8" => seg <=x"80";--8
					when x"9" => seg <=x"90";--9
					when x"A" => seg <=x"88";--A
					when x"b" => seg <=x"83";--B
					when x"c" => seg <=x"c6";--C
					when x"d" => seg <=x"a1";--D
					when x"e" => seg <=x"86";--E
					when x"f" => seg <=x"8e";--F
					when others =>  seg <= x"00";--Otros casos
					end case;
			when '1' =>
					case(ix2) is
					when x"0" => seg <=x"c0";--0
					when x"1" => seg <=x"f9";--1
					when x"2" => seg <=x"a4";--2
					when x"3" => seg <=x"b0";--3
					when x"4" => seg <=x"99";--4
					when x"5" => seg <=x"92";--5
					when x"6" => seg <=x"82";--6
					when x"7" => seg <=x"f8";--7
					when x"8" => seg <=x"80";--8
					when x"9" => seg <=x"90";--9
					when x"A" => seg <=x"88";--A
					when x"b" => seg <=x"83";--B
					when x"c" => seg <=x"c6";--C
					when x"d" => seg <=x"a1";--D
					when x"e" => seg <=x"86";--E
					when x"f" => seg <=x"8e";--F
					when others =>  seg <= x"00";--Otros casos
			end case;
			when others=>
		end case;
	end process;

end desarrollo;





library ieee;
use ieee.std_logic_1164.all;

entity practica3 is
port(
	sel: in std_logic;
	ix1: in std_logic_vector(3 downto 0);
	ix2: in std_logic_vector(3 downto 0);
	ox: out std_logic_vector(2 downto 0);
	seg: out std_logic_vector(7 downto 0);
	dig: out std_logic_vector(3 downto 0)
);
end practica3;

architecture desarrollo of practica3 is
	component decoder port (inx: in std_logic_vector(3 downto 0); seg: out std_logic_vector(7 downto 0));
	end component;
	signal dat : std_logic_vector (3 downto 0);
begin
	process(sel, ix1, ix2)
	begin
		case(sel) is
			when '0'=>
				dat <= ix1;
			when '1'=>
				dat <= ix2;
			when others=>
		end case;
	end process;
	u1: decoder port map(inx=> dat, seg=> seg);
end desarrollo;